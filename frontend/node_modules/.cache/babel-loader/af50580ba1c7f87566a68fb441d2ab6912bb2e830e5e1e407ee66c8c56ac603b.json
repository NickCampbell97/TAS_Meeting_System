{"ast":null,"code":"var _jsxFileName = \"/home/nick/dev/TAS_Meeting_System/frontend/src/components/design_pane/DesignContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SlideWindow from './SlideWindow';\nimport Stack from '@mui/material/Stack';\nimport SaveButton from './button_options/SaveButton';\nimport { Box } from '@mui/material';\nimport InsertSelection from './button_options/InsertSelection';\nimport InsertButton from './button_options/InsertButton';\nimport DuplicateButton from './button_options/DuplicateButton';\nimport DeleteButton from './button_options/DeleteButton';\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignContainer = ({\n  color,\n  slideData,\n  deckName\n}) => {\n  _s();\n  const handleSave = () => {};\n  const handleUpload = async event => {\n    if (!file) {\n      setMessage('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('/api/upload-doc', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSession(data.session_id);\n        setMessage('Success!');\n      } else {\n        setMessage('Failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const slideName = slideData.slide_name;\n  const handleInsert = async (selectedValue, name, slideID) => {\n    if (selectedValue === 'option2') {\n      handleUpload();\n    }\n  };\n  const handleDuplicate = (deck, slide) => {};\n  const handleDelete = (deck, slide) => {};\n  const [selectedInsertValue, setSelectedInsertValue] = useState('option1');\n  const handleChange = event => {\n    setSelectedInsertValue(event.target.value);\n  };\n  const insertOptions = [{\n    value: 'option1',\n    label: 'Body'\n  }, {\n    value: 'option2',\n    label: 'Document'\n  }, {\n    value: 'option3',\n    label: 'Header'\n  }, {\n    value: 'option4',\n    label: 'Image'\n  }, {\n    value: 'option5',\n    label: 'Comment'\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      overflow: 'hidden',\n      px: 3,\n      backgroundColor: 'lightgray',\n      height: '570px',\n      width: '850px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      direction: \"row\",\n      style: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        width: '500px',\n        marginTop: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SaveButton, {\n        onSave: handleSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InsertSelection, {\n        value: selectedInsertValue,\n        onChange: handleChange,\n        options: insertOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InsertButton, {\n        onClick: () => handleInsert(selectedInsertValue, deckName, slideName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DuplicateButton, {\n        onClick: () => handleDuplicate(deckName, slideData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => handleDelete(deckName, slideData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'right',\n          marginLeft: '150px',\n          fontSize: '14px',\n          font: 'roboto'\n        },\n        children: deckName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SlideWindow, {\n      color: color,\n      slideData: slideData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(DesignContainer, \"w5lmINiRo9U3U7xZUazR2tSe83k=\");\n_c = DesignContainer;\nexport default DesignContainer;\nvar _c;\n$RefreshReg$(_c, \"DesignContainer\");","map":{"version":3,"names":["React","useState","SlideWindow","Stack","SaveButton","Box","InsertSelection","InsertButton","DuplicateButton","DeleteButton","jsxDEV","_jsxDEV","DesignContainer","color","slideData","deckName","_s","handleSave","handleUpload","event","file","setMessage","formData","FormData","append","response","fetch","method","body","ok","data","json","setSession","session_id","error","console","slideName","slide_name","handleInsert","selectedValue","name","slideID","handleDuplicate","deck","slide","handleDelete","selectedInsertValue","setSelectedInsertValue","handleChange","target","value","insertOptions","label","sx","flexGrow","overflow","px","backgroundColor","height","width","children","spacing","direction","style","alignItems","marginTop","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","onClick","textAlign","marginLeft","fontSize","font","_c","$RefreshReg$"],"sources":["/home/nick/dev/TAS_Meeting_System/frontend/src/components/design_pane/DesignContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SlideWindow from './SlideWindow';\nimport Stack from '@mui/material/Stack';\nimport SaveButton from './button_options/SaveButton';\nimport { Box } from '@mui/material';\nimport InsertSelection from './button_options/InsertSelection';\nimport InsertButton from './button_options/InsertButton';\nimport DuplicateButton from './button_options/DuplicateButton';\nimport DeleteButton from './button_options/DeleteButton';\nimport '@fontsource/roboto';\n\nconst DesignContainer = ({ color, slideData, deckName }) => {\n\n    const handleSave = () => {\n\n    };\n\n    const handleUpload = async (event) => {\n\n        if (!file) {\n            setMessage('Please select a file.');\n            return;\n        }\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await fetch('/api/upload-doc', {\n              method: 'POST',\n              body: formData,\n            });\n      \n            if (response.ok) {\n              const data = await response.json();\n              setSession(data.session_id);\n              setMessage('Success!')\n            } else {\n              setMessage('Failed');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const slideName = slideData.slide_name;\n\n    const handleInsert = async (selectedValue, name, slideID) => {\n\n        if (selectedValue === 'option2') {\n            handleUpload();\n        }\n\n    };\n\n    const handleDuplicate = (deck, slide) => {\n\n    };\n\n    const handleDelete = (deck, slide) => {\n\n    };\n\n    const [selectedInsertValue, setSelectedInsertValue] = useState('option1');\n\n    const handleChange = (event) => {\n        setSelectedInsertValue(event.target.value);\n    };\n\n\n    const insertOptions = [\n        { value: 'option1', label: 'Body' },\n        { value: 'option2', label: 'Document' },\n        { value: 'option3', label: 'Header' },\n        { value: 'option4', label: 'Image' },\n        { value: 'option5', label: 'Comment' }\n    ];\n    \n    return (\n        <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3, backgroundColor: 'lightgray', height: '570px', width: '850px' }}>\n            <Stack spacing={1} direction=\"row\" style={{alignItems: 'center', backgroundColor: 'white', width: '500px', marginTop: '8px'}}>\n                <SaveButton onSave={handleSave} />\n                <InsertSelection\n                    value={selectedInsertValue}\n                    onChange={handleChange}\n                    options={insertOptions}\n                />\n                <InsertButton onClick={() => handleInsert(selectedInsertValue, deckName, slideName)} />\n                <DuplicateButton onClick={() => handleDuplicate(deckName, slideData)} />\n                <DeleteButton onClick={() => handleDelete(deckName, slideData)} />\n                <p style={{ textAlign: 'right', marginLeft: '150px', fontSize: '14px', font: 'roboto' }}>{deckName}</p>\n            </Stack>\n            <SlideWindow color={color} slideData={slideData} />\n        </Box>\n        \n        \n    );\n\n};\n\nexport default DesignContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}